[{"title":"Failure","date":"2022-10-26T08:15:43.000Z","url":"/posts/failure/","categories":[["undefined",""]],"content":"Failure always accompanies life… But_i_still_stepping_forward"},{"title":"How Middleboxs Identify Proxy Traffics","date":"2022-10-22T15:36:11.000Z","url":"/posts/middlebox-traffic-analysis/","tags":[["http","/tags/http/"],["tls","/tags/tls/"]],"categories":[["undefined",""]],"content":"AbstractThere is no absolute safe disguise, all protocols have risks of detected. Common attack made by middle box Passive analysis (Traffic characteristic, PoC vulnerability)Usually use for plain text protocol or TLS handshake. Active analysisUsually use for Shadowsocks, V2Ray, TLS v1.3 (obtian svers’s SSL certificate) replay package Some obvious charecteristics of proxy traffic. Long connectionMost HTTP traffic is short connection. bidireaction flow99% of Web traffic(HTTP) is one-way flow, which is a group of request match a group of response, few website use websocket. High trafficLack of reasons to justify large traffic. High connection numbersNormally a website will only create one websocket connection, hard to explain why there are 20-30 connections existed. Point to pointIP to IP, high encryption, high traffic, thus —- high suspiciousness Those charecteristics are always exist in proxy protocols, it will be hard to erase. TLS traffic risk analysis ClientHello TLS ClientHello have fingerprint If access website using programs default fingerprint(for example: Go TLS) and match the features above. The risk that will be recongized by proxy will be high. Iran firewall will reject curl and wget fingerprint request for non-whitelist, Go TLS and browsers fingerprint will be allowed.Recommende to connect by using browser’s fingerprint. (Go project uTLS)Note: this repository is disrepair and the chrome fingerprint remain at Chrome 83, it may be a risk.A changable option of the above is here , Chrome 104 fingerprint is currently added. Server Name Idication (SNI)Highest risk for free domains, cheap domains will also contain risk. TLS connection versionTlS v1.3 has the highest risk, all contents after the Server Hello will be all encrypted, middlebox need active detection to obtain server certificate. TLS v1.2 will be considered as median risk. All certificates exchange will be in plain text, middle box can verify it through intercept traffic. SSL v3&#x2F;TLS v1.0&#x2F;TLS v1.1 have the lowest risk , there is few traffic here, in other words, fewer sample. However, using out-dated encryption have risk of being attacked, not recommended. TLS server certificate Self-signed certificate have the highest risk.Second are cloudflare certificate and Let’s Encrypt because they are free. Almost no people will spent hunders of dollars on certificate. Report: New detection method that capable to detect Fake TLS trafficAnalysisBoth MTPRoto FakeTLS and Shadow TLS(v1&#x2F;v2) are simulate a TLS handshake with trusted certificate to circumvent whitelist. Both two protocols are nearly perfect, they can be verified as valid client while handshake. How to verify client of MTProto FakeTLSClientHello package remove ramdom field and make a whole package for hmac, key will be secret, also use the hmac on sevrer to verify client, random have one-time processing, it will fallback to real web server if failed. Indentification method: TLS handshake of MTProto not standardize, firewall can intercept the hostCert package and judge the length. The lenght of hostCert will be ramdon, between 1024-4096 bit. (mtg-faketls) Shadow TLS v1 won’t verify client Identification method: send a request to the sever through curl, curl will failed. How Shadow TLS v2 verify clientAfter client request, sever will return the orgin data as challenge response and use password to hmac. The server can verif the client using same hmac.Due to the return data have randomness and can also achieve one-time verification, middlebox can not react the challenge response if they don’t have password, hence, it will be more safer compare with MTproto handshake. New measure to detect clientMost protocols security are based on server verify the client, but the client will not verify sever’s validity.In other words, one-way authenticationFirewall can detect the server reaction by using fake server package. Using reverse dectection to check if the clients are real browser MTProto use hmac algorithm in ServerHello and will not affected by this measure. How PoC identify the Shadow TLS v2 protocol desigin Github docsFirewall will intercept a normal TCP connection randomly. After they get TLS ClientHello, they will hijack the request content’s SNI field to real SNI server. After the TLS handshake finished, client of Shadow TLS will incert server’s challenge response 8 bit before the Application Data. At this moment, because the opposite side is a real real TLS server, handshake with Shadow TLS client will be successful. But afer the hmac sent, server will drop an Alert(Encrypted Application Data) bacause it is not a negotiated TLS encryption. After that, the server will FIN or RST the TCP connection, at this time the ShadowTLS will be identified and can be block by ip precisely. Proxy procotols will normally use multi connection. Middlebox can precisely identify the client by merely pick one of those connection. Currently recommend proxy protocol Hystertia, TUIC(QUIC)The firewall does not block or interfere with QUIC, so you can use it with confidence. This article is translate from Coia channel , some emotional expressions have been deleted. This article not represent personal opinion "},{"title":"Nginx pid error fix","date":"2022-10-21T02:50:32.000Z","url":"/posts/nginx-pid-error/","tags":[["shell","/tags/shell/"],["nginx","/tags/nginx/"],["linux","/tags/linux/"]],"categories":[["undefined",""]],"content":"If you use systemctl status nginx to check nginx status you may find a pid error appear on status panel. The words that appear may be : This is becasue the pid file not generate before the nginx booted.The solution is to add following sentence into /usr/lib/systemd/system/nginx.service, it will let nginx wait 0.1s before executing the executable. Add this sentence to the [service] part. Rload and restart the nginx Problem fixed."},{"title":"Some simple security configuration I made for Mr.W's Blog","date":"2022-10-18T07:38:15.000Z","url":"/posts/security-blog-configure/","tags":[["shell","/tags/shell/"],["nginx","/tags/nginx/"],["linux","/tags/linux/"],["network","/tags/network/"]],"categories":[["Tutorial","/categories/Tutorial/"]],"content":"Because the server I use don’t have DDOS protection, also becasue the sensitive contents I display may draw the attention of my government, the safety measures are required.Thus,to agianst the foreseeable DDOS&#x2F;CC attacks and private information sniffings, I made some simple security configurations on my server. It’s pretty easy to achieve, but effect will be powerful. Cloudflare partCloudflare helps me a lot. It provide free DDOS protection and free DNS, CDN service, whcih help me get tons of advanced protection at almost no cost. Cloudflare is one of the most extraordinary web service provider i ever seen. If you are affordable to pay for there monthly plans, you will obtain more comprehensive protections. Enable CDNBack to topic, first you need to enter your site page’s DNS section, resolve your domain name to your server ip, then enable CDN by turning the grey cloud into orange. I prtend you know how to add your domain into clodflare, if you feel not sure about that, visit here.Apart from helping you to hide your server ip, CDN can also speed up your website http respond speed. Overall, there is no reason not to use this service when you are a website builder. SSL&#x2F;TLS, HTTPSNext, we need to apply a TLS cert to establish https connection. By etablishing the TLS handshake, we can encrypt the traffic flow and increase the cost of MITM attack. Originally, we want to to obtain an eligible certificate we need to pay a lot of money for certificate providers such as Digicert, Globalsign . But thanks to the great Let’s Encrypt project, we can now easily obtain a TLS certificate without any cost. Today i will show you how to easily apply the certificate through Cloudflare. The certificate Cloudflare provided is usable only when the CDN service is activated. If you don’t use Cloudflare’s CDN service, please use ACME.sh script to generate it in Shell. I will make a tutoral about ACME later. In the Cloudflare web control panel, Click SSL&#x2F;TLS, in the overview section, switch the encryption mode to strict(full).Next, go to the Origin Server section, enable the authenticated origin pulls, then click create certificate.Change the key type to ECC, select the certificate validity to 15 years, then click create.If you want know why use ECC rather than RSA, plase check the table below. Overall, ECC has advantages over RSA , and if you don’t have the compability demands, the ECC&#x2F;ECDSA will always be your first choice. Different_between_ECC_and_RSA Algorithm ECC RSA Key length Generally use 256-bit encryption length (equivalent to RSA 3072-bit) Generally use 2048-bit encryption length CPU usage Low High RAM usage Low High Network consumption Low High Encryption spped Faster Slower Crack difficulty Has mathematical properties, exponential level Sub-exponential level Anti-attack Strong Weak Scalability High, lesser length more scalability Low Copy the contents of the original certificate and private key, put it into a pem file and key file each. (A simple way to do it in Windows environment is to copy the contents of OC and private key contents into TXT file, and change the suffix to .pem and .key – for example: pub_key.pem, private_key.key) . Click OK. Download Cloudflare certificate in order to support authenticated origin pull functionDownload the .PEM file of cloudflare client certificat(the link is intergrated in the fonts). If there is no other accident, you will get a file name authenticated_origin_pull_ca.pem, keep it and we will use it later. Server partServer part config mainly focus on nginx and host itself. HostChange your password Using SSH-keygen generate key-pair and activate You can define where to save the key file(I suggest that to keep the default setting) and wether a extra passphrase needed.You have 2 options to activate the key. Official_version Personal_version Allow Pubkey authentication Delete annotation mark “mark” (if you see it appear in front of the text), change PubkeyAuthentication to yes.Type :wq to quit and save. Change the ssh port change port 22 to any port over 1024Type :wq to quit and save. Reject Password auth(optional)Please make sure you can access to your server successfully through pub key before make this change Change PasswordAuthentication to noType :wq to quit and save. Nginx config Force redirect http request to https (301) CertificateAdd the previous applied certificate into Nginx.Upload the pem and key file in any path of the server, for example: /home/website/pub_key.pemchnage these 2 lines. Reject insecure handshake Origin pull certificateUpload the cloudflare origin pull certificate to server, move back to cloudflare part you will find the download address of certificate. For example: /home/website/cloudflare/authenticated_origin_pull_ca.pem Block all connection of specific country (403) (optional)It can be treat as a measure of DDOS protection.I use China as an example, if you want to change the country, plase notice that the country code follow the rule of two-letter ISO3166-1 . "},{"title":"Function Test","date":"2022-10-13T16:46:27.000Z","url":"/posts/function-test/","categories":[["undefined",""]],"content":"This post is maintainance use only primary success danger info warning collapse collapse 1collapse 2… collapse-pre-open collapse 1collapse 2… blur fonts "},{"title":"About me","date":"2022-10-11T03:06:19.000Z","url":"/about/","categories":[["undefined",""]],"content":"HelloThis is Mr.WI will post the article regularly, content may include technical insights, random thoughts, operational endorsements, etc. If you want to contact me, plase use the email sit in the bottom of my website. "},{"title":"Markdown Test","date":"2022-10-11T03:06:19.000Z","url":"/posts/raw/","categories":[["undefined",""]],"content":"This post is maintenance use only This cheatsheet is specifically Markdown Here’s version of Github-flavored Markdown. This differs slightly in styling and syntax from what Github uses, so what you see below might vary a little from what you get in a Markdown Here email, but it should be pretty close. Headers H1H2H3H4H5H6Alternatively, for H1 and H2, an underline-ish style: Alt-H1Alt-H2 Emphasis Emphasis, aka italics, with asterisks or underscores. Strong emphasis, aka bold, with asterisks or underscores. Combined emphasis with asterisks and underscores. Lists First ordered list item Another item Unordered sub-list. Actual numbers don’t matter, just that it’s a number Ordered sub-list And another item. Some text that should be aligned with the above item. Unordered list can use asterisks Or minuses Or pluses LinksThere are two ways to create links. I’m an inline-style link I’m a reference-style link You can use numbers for reference-style link definitions Or leave it empty and use the link text itself Some text to show that the reference links can follow later. Images Here’s our logo (hover to see the title text): Inline-style: Reference-style: Code and Syntax HighlightingCode blocks are part of the Markdown spec, but syntax highlighting isn’t. However, many renderers – like Github’s and Markdown Here – support syntax highlighting. Markdown Here supports highlighting for dozens of languages (and not-really-languages, like diffs and HTTP headers); to see the complete list, and how to write the language names, see the highlight.js demo page. Inline code has back-ticks around it. Blocks of code are either fenced by lines with three back-ticks ```, or are indented with four spaces. I recommend only using the fenced code blocks – they’re easier and only they support syntax highlighting. (Github Wiki pages don’t seem to support syntax highlighting, so the above won’t be colourful (the strings are not red, for example). Try it out in a Markdown Here email or a Github Markdown README or Github Issue – you can preview a new Issue without submitting it.) Again, to see what languages are available for highlighting, and how to write those language names, see the highlight.js demo page. Blockquotes Blockquotes are very handy in email to emulate reply text.This line is part of the same quote. Quote break. This is a very long line that will still be quoted properly when it wraps. Oh boy let’s keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can put Markdown into a blockquote. Inline HTMLYou can also use raw HTML in your Markdown, and it’ll mostly work pretty well. Here are a couple of common examples: Definition list Is something people use sometimes. Markdown in HTML Does *not* work **very** well. Use HTML tags. Tables Are Cool Zebra Stripes Are Pretty Here Is Another Row Github-flavored Markdown supports a special table syntax, but Markdown Here does not support it yet. There’s an issue for it. Horizontal Rule Three or more… Hyphens Asterisks Underscores Line BreaksMy basic recommendation for learning how line breaks work is to experiment and discover – hit &lt;Enter&gt; once, then hit it twice, see what happens. You’ll soon learn to get what you want. “Markdown Toggle” is your friend. Here are some things to try out: With only a single newline, this line andthis line will be a single line. But this one is separated by two newlines and so will be a separate paragraph. This line has two spaces at the end (hard for you to see, but trust me!).So this is a separate line in the same paragraph. "}]